import React, { useState, useEffect } from 'react';
import { Tabs, Card, Button, Row, Col, Typography, Tag, Collapse } from 'antd';
import { CalendarOutlined, BookOutlined, QuestionCircleOutlined, ClockCircleOutlined, EnvironmentOutlined, TeamOutlined } from '@ant-design/icons';
import Joyride, { CallBackProps, STATUS, Step } from 'react-joyride';

const { Title } = Typography;
const { Panel } = Collapse;

export const events = [
  { id: 1, title: '–û—Å–Ω–æ–≤—ã —Ä–∞–±–æ—Ç—ã —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏', type: '–°–µ–º–∏–Ω–∞—Ä', description: '–ë–∞–∑–æ–≤—ã–π –∫—É—Ä—Å –ø–æ —Ä–∞–±–æ—Ç–µ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏...', date: '15.06.2023', time: '10:00 - 13:00', place: '–û—Ñ–∏—Å –∫–æ–º–ø–∞–Ω–∏–∏', participants: '12 –∏–∑ 20', price: '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ' },
  { id: 2, title: '–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–µ –∞—Å–ø–µ–∫—Ç—ã —Å–¥–µ–ª–æ–∫', type: '–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å', description: '–ö—É—Ä—Å –ø–æ –ø—Ä–∞–≤–æ–≤—ã–º –∞—Å–ø–µ–∫—Ç–∞–º...', date: '20.06.2023', time: '14:00 - 18:00', place: '–ë–∏–∑–Ω–µ—Å-—Ü–µ–Ω—Ç—Ä', participants: '8 –∏–∑ 15', price: '2 500 ‚ÇΩ' },
];
export const courses = [
  { id: 1, title: '–ë–∞–∑–æ–≤—ã–π –∫—É—Ä—Å —Ä–∏—ç–ª—Ç–æ—Ä–∞', level: '–ù–∞—á–∏–Ω–∞—é—â–∏–π', description: '–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∫—É—Ä—Å –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö...', duration: '4 –Ω–µ–¥–µ–ª–∏', lessons: 12, price: '15 000 ‚ÇΩ' },
  { id: 2, title: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ –ø—Ä–æ–¥–∞–∂', level: '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π', description: '–ö—É—Ä—Å –¥–ª—è –æ–ø—ã—Ç–Ω—ã—Ö —Ä–∏—ç–ª—Ç–æ—Ä–æ–≤...', duration: '3 –Ω–µ–¥–µ–ª–∏', lessons: 9, price: '20 000 ‚ÇΩ' },
];
export const faq = [
  { q: '–ö–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç?', a: '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–û–±—ä–µ–∫—Ç—ã –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏" –∏ –Ω–∞–∂–º–∏—Ç–µ "–î–æ–±–∞–≤–∏—Ç—å –æ–±—ä–µ–∫—Ç".' },
  { q: '–ö–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –æ–±—ä–µ–∫—Ç–∞?', a: '–í –∫–∞—Ä—Ç–æ—á–∫–µ –æ–±—ä–µ–∫—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Å—Ç–∞—Ç—É—Å.' },
];

const joyrideSteps: Step[] = [
  {
    target: '[data-tour="tab-events"]',
    title: '–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è',
    content: '–ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –≤—Å–µ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ –∏ –ø—Ä–æ—à–µ–¥—à–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –¥–ª—è —Ä–∏—ç–ª—Ç–æ—Ä–æ–≤.',
    disableBeacon: true,
    placement: 'bottom',
  },
  {
    target: '[data-tour="tab-courses"]',
    title: '–ö—É—Ä—Å—ã',
    content: '–í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ —Å–æ–±—Ä–∞–Ω—ã –æ–±—É—á–∞—é—â–∏–µ –∫—É—Ä—Å—ã –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏.',
    disableBeacon: true,
    placement: 'bottom',
  },
  {
    target: '[data-tour="tab-faq"]',
    title: 'FAQ',
    content: '–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏ —Å–æ–≤–µ—Ç—ã –ø–æ —Ä–∞–±–æ—Ç–µ —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π.',
    disableBeacon: true,
    placement: 'bottom',
  },
];

export type EventType = typeof events[number];
export type CourseType = typeof courses[number];
export type FaqType = typeof faq[number];

export default function EducationPage() {
  const [tab, setTab] = useState('events');
  const [joyrideRun, setJoyrideRun] = useState(false);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ walkthrough –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  useEffect(() => {
    if (!localStorage.getItem('walkthrough_shown')) {
      setTimeout(() => {
        setJoyrideRun(true);
        localStorage.setItem('walkthrough_shown', '1');
      }, 800);
    }
  }, []);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è walkthrough
  const handleJoyrideCallback = (data: CallBackProps) => {
    const { status, step } = data;
    if (status === STATUS.FINISHED || status === STATUS.SKIPPED) {
      setJoyrideRun(false);
    }
    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –≤–∫–ª–∞–¥–∫—É –ø–æ —à–∞–≥—É
    if (step && step.target && typeof step.target === 'string') {
      if (step.target.includes('tab-events')) setTab('events');
      if (step.target.includes('tab-courses')) setTab('courses');
      if (step.target.includes('tab-faq')) setTab('faq');
    }
  };

  const tip = (
    <Card style={{ background: '#f5faff', border: '1px solid #b3e5fc', marginBottom: 16 }}>
      <b>üí° –°–æ–≤–µ—Ç</b>
      <div style={{ marginTop: 8 }}>
        –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –ø–æ —Ä–∞–±–æ—Ç–µ —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ. –°–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–≤–µ–¥–µ—Ç –≤–∞—Å –ø–æ –æ—Å–Ω–æ–≤–Ω—ã–º —Ä–∞–∑–¥–µ–ª–∞–º –∏ –æ–±—ä—è—Å–Ω–∏—Ç –∏—Ö —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å.
      </div>
      <Button type="primary" style={{ marginTop: 12 }} onClick={() => setJoyrideRun(true)}>
        –ó–∞–ø—É—Å—Ç–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ
      </Button>
    </Card>
  );

  return (
    <div style={{ width: '100%', padding: '32px 40px 0 40px', background: 'var(--edu-bg, #f7f9fb)', minHeight: '100vh' }}>
      <Joyride
        steps={joyrideSteps}
        run={joyrideRun}
        continuous
        showSkipButton
        showProgress
        locale={{ back: '–ù–∞–∑–∞–¥', close: '–ó–∞–∫—Ä—ã—Ç—å', last: '–ì–æ—Ç–æ–≤–æ', next: '–î–∞–ª–µ–µ', skip: '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ' }}
        styles={{
          options: {
            zIndex: 11000,
            primaryColor: '#296fff',
            textColor: '#222',
            arrowColor: '#fff',
          },
        }}
        callback={handleJoyrideCallback}
      />
      <h1 style={{ marginBottom: 24 }}>–û–±—É—á–µ–Ω–∏–µ</h1>
      <Tabs
        activeKey={tab}
        onChange={setTab}
        items={[
          { key: 'events', label: <span data-tour="tab-events"><CalendarOutlined /> –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è</span>, children: (
            <Row gutter={[24, 24]}>
              {events.map(ev => (
                <Col xs={24} sm={12} md={8} key={ev.id}>
                  <Card style={{ borderRadius: 18, boxShadow: '0 2px 12px #e6eaf1', minHeight: 340 }}>
                    <div style={{ height: 120, background: '#f0f2f5', borderRadius: 12, marginBottom: 16, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>
                      <img src="" alt="img" style={{ width: 60, height: 60, opacity: 0.2 }} />
                    </div>
                    <div style={{ fontWeight: 600, fontSize: 18 }}>{ev.title} <Tag color="blue">{ev.type}</Tag></div>
                    <div style={{ color: '#555', margin: '8px 0 12px 0' }}>{ev.description}</div>
                    <div style={{ fontSize: 14, color: '#888', marginBottom: 4 }}><ClockCircleOutlined /> {ev.date} &nbsp; {ev.time}</div>
                    <div style={{ fontSize: 14, color: '#888', marginBottom: 4 }}><EnvironmentOutlined /> {ev.place}</div>
                    <div style={{ fontSize: 14, color: '#888', marginBottom: 4 }}><TeamOutlined /> {ev.participants}</div>
                    <div style={{ fontWeight: 600, marginTop: 8 }}>{ev.price}</div>
                    <Button type="primary" style={{ marginTop: 12 }}>–ü–æ–¥—Ä–æ–±–Ω–µ–µ</Button>
                  </Card>
                </Col>
              ))}
            </Row>
          ) },
          { key: 'courses', label: <span data-tour="tab-courses"><BookOutlined /> –ö—É—Ä—Å—ã</span>, children: (
            <Row gutter={[24, 24]}>
              {courses.map(c => (
                <Col xs={24} sm={12} md={8} key={c.id}>
                  <Card style={{ borderRadius: 18, boxShadow: '0 2px 12px #e6eaf1', minHeight: 340 }}>
                    <div style={{ height: 120, background: '#f0f2f5', borderRadius: 12, marginBottom: 16, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>
                      <img src="" alt="img" style={{ width: 60, height: 60, opacity: 0.2 }} />
                    </div>
                    <div style={{ fontWeight: 600, fontSize: 18 }}>{c.title} <Tag color="blue">{c.level}</Tag></div>
                    <div style={{ color: '#555', margin: '8px 0 12px 0' }}>{c.description}</div>
                    <div style={{ fontSize: 14, color: '#888', marginBottom: 4 }}>–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {c.duration}</div>
                    <div style={{ fontSize: 14, color: '#888', marginBottom: 4 }}>–£—Ä–æ–∫–æ–≤: {c.lessons}</div>
                    <div style={{ fontWeight: 600, marginTop: 8 }}>{c.price}</div>
                    <Button type="primary" style={{ marginTop: 12 }}>–ü–æ–¥—Ä–æ–±–Ω–µ–µ</Button>
                  </Card>
                </Col>
              ))}
            </Row>
          ) },
          { key: 'faq', label: <span data-tour="tab-faq"><QuestionCircleOutlined /> FAQ</span>, children: (
            <div style={{ maxWidth: 900, margin: '0 auto' }}>
              <Title level={4} style={{ marginBottom: 16 }}>–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã</Title>
              {tip}
              <Collapse accordion>
                {faq.map((f, i) => (
                  <Panel header={f.q} key={i}>
                    {f.a}
                  </Panel>
                ))}
              </Collapse>
            </div>
          ) },
        ]}
        style={{ background: 'transparent', marginBottom: 24 }}
      />
      <Button type="primary" style={{ float: 'right', marginBottom: 24 }}>–ú–æ–∏ –∑–∞–ø–∏—Å–∏</Button>
    </div>
  );
} 